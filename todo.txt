tripView
  [x]add destinations
  [x]have destinations added to list
  [x]list of destinations are links to corresponding destination view
  []prevent multiple destinations with the same name from being entered (sweet alert)
  []ability to delete a destination (and corresponding view and db file
  []



destinationView
  [x]add info to DB object based on destinationName
  [x]have db info display on load
  [x]have db info update when update button is clicked
  []toDo functionality working potentially as a new view?
  []


Models.
  []Schema
  []Three tables: user, destination (trip id, and unique destination id)
  []user
  [x]destination travel + lodging


Server.js
  []check if destination name is in use, prevent new from being created if true

Navigation
  []on login, redirect to tripView.html
  []Trip view has button to log out
  []Destination views have a button to return to trip view and a button to log out

Notes:
html -> controller -> service -> server -> (routes) -> DB -> back to html through all the rest of the steps

Get request runs on page load and on button press

QUESTIONS:
//ng-click will be ng-click from navList with get request function pull {{destinations.destinationName}} as param and key
// http://stackoverflow.com/questions/33068511/passing-parameter-with-ngroute


//


Last thing I was working on:
//client side get request in controller that takes in var currentDestinationName
as a req.param and grabs corresponding info from DB via grabSpecificDestinationInfo function
